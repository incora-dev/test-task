{"version":3,"sources":["utils/serializer.js","components/List-item/List-item.js","store/actions/list.js","store/actionTypes.js","components/List/List.js","App.js","data.js","store/reducers/list.js","store/reducers/index.js","store/store.js","serviceWorker.js","index.js"],"names":["action","type","payload","arguments","length","undefined","ListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","deleteUser","id","editUser","_this$state$newUser","state","newUser","firstName","lastName","score","alert","onCancelEdit","handleInput","event","_event$target","target","name","value","setState","prevState","objectSpread","defineProperty","_this$props","editMode","_this2","_this$state","_this$state$newUser2","react_default","a","createElement","Fragment","className","placeholder","onChange","onClick","concat","nextProps","Component","mapDispatchToProps","data","connect","List","addUser","preventDefault","renderUserAddForm","sortType","sortBy","bind","assertThisInitialized","array","key","setUsers","newList","sort","b","users","map","user","List_item","assign","App","getUsers","components_List_List","toConsumableArray","list","createdAt","initialState","combineReducers","DATA","Date","toISOString","newData","el","filter","createStore","allReducers","applyMiddleware","apply","Boolean","window","location","hostname","match","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b23723be.chunk.js","sourcesContent":["export const action = (type, payload = null) => ({ type, payload });\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './list-item.scss';\nimport { editUser, deleteUser } from '../../store/actions/list';\n\nclass ListItem extends Component {\n  constructor(props) { \n    super(props)\n    this.state = {\n      editMode: false,\n      newUser: {\n        firstName: props.firstName,\n        lastName: props.lastName,\n        score: props.score\n      }\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if(!prevState.editMode) {\n      return {\n        ...prevState,\n        newUser: {\n          firstName: nextProps.firstName,\n          lastName: nextProps.lastName,\n          score: nextProps.score\n        }\n      }\n    }\n    return prevState;\n  }\n  \n\n  deleteUser = (id) => {\n    this.props.deleteUser(id);\n  }\n\n  editUser = () => {\n    const { id } = this.props;\n    const { newUser : { firstName, lastName, score } } = this.state;\n    if(!(firstName && lastName && score)) {\n      return alert('Fill all fields!');\n    }\n    if(score < 0 || score > 100) {\n      return alert('Incorrect score field!');\n    }\n    this.props.editUser({id, firstName, lastName, score });\n    this.onCancelEdit();\n  }\n\n  handleInput = (event) => {\n    const { name, value } = event.target;\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        newUser: {\n          ...prevState.newUser,\n          [name]: value\n        }\n      };\n    });\n  }\n\n  onCancelEdit = () => {\n    const {\n      firstName,\n      lastName,\n      score\n    } = this.props;\n\n    this.setState({\n      editMode: false,\n      newUser: { firstName, lastName, score }\n    })\n  }\n\n  render() {\n    const { id } = this.props;\n    const {\n      editMode,\n      newUser: {\n        firstName,\n        lastName,\n        score\n      }\n    } = this.state;\n\n    return (\n      <>\n      {editMode ?\n        (<tr className=\"list-item\">\n          <td>\n            <input placeholder=\"First Name\" type=\"text\" name=\"firstName\" value={firstName} onChange={this.handleInput}></input>\n            <input placeholder=\"Last Name\" type=\"text\" name=\"lastName\" value={lastName} onChange={this.handleInput}></input>\n          </td>\n          <td>\n            <input placeholder=\"Score\" type=\"number\" name=\"score\" value={score} onChange={this.handleInput}></input>\n          </td>\n          <td>\n            <button onClick={this.editUser} type=\"button\">Submit</button>\n          </td>\n          <td>\n            <button onClick={() => this.setState({ editMode: false })} type=\"button\">Cancel</button>\n          </td>\n        </tr>)\n        :\n        (<tr className=\"list-item\">\n          <td>{`${lastName}, ${firstName}`}</td>\n          <td>{`${score}`}</td>\n          <td>\n            <button onClick={() => this.deleteUser(id)} type=\"button\">Delete</button>\n          </td>\n          <td>\n            <button onClick={() => this.setState({ editMode: true })} type=\"button\">Edit</button>\n          </td>\n        </tr>)\n      }\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = {\n  editUser,\n  deleteUser\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ListItem);\n","import { action } from '../../utils/serializer';\n\nimport {\n  GET_USERS,\n  SET_USERS,\n  ADD_USER,\n  EDIT_USER,\n  DELETE_USER,\n} from '../actionTypes';\n\nexport const getUsers = ()  => action(GET_USERS);\nexport const setUsers = (data)  => action(SET_USERS, data);\nexport const addUser = (data)  => action(ADD_USER, data);\nexport const editUser = (data)  => action(EDIT_USER, data);\nexport const deleteUser = (data)  => action(DELETE_USER, data);","export const GET_USERS = 'GET_USERS';\nexport const ADD_USER = 'ADD_USER';\nexport const EDIT_USER = 'EDIT_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const SET_USERS = 'SET_USERS';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './list.scss';\nimport ListItem from '../List-item/List-item';\nimport { addUser, setUsers } from '../../store/actions/list';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: false,\n      sortType: '',\n      newUser: {\n        firstName: '',\n        lastName: '',\n        score: ''\n      }\n    }\n\n    this.sortBy = this.sortBy.bind(this);\n  }\n\n  addUser = (event) => {\n    event.preventDefault();\n    const { newUser : { firstName, lastName, score } } = this.state;\n\n    if(!(firstName && lastName && score)) {\n      return alert('Fill all fields!');\n    }\n    if(score < 0 || score > 100) {\n      return alert('Incorrect score field!');\n    }\n\n    this.props.addUser({ firstName, lastName, score });\n    this.onCancelEdit();\n  }\n\n  sortBy(array, key) {\n    const { setUsers } = this.props;\n    const { sortType } = this.state;\n    const newList = array.sort((a, b) => {\n      if (a[key] < b[key]) {\n        return sortType === 'asc' ? -1 : 1;\n      }\n      else if (a[key] > b[key]) {\n        return sortType === 'asc' ? 1 : -1;\n      }\n      else if ((a[key] === b[key]) && key === 'score') {\n        if (a.lastName > b.lastName) {\n          return sortType === 'asc' ? 1 : -1;\n        }\n        else if (a.lastName < b.lastName) {\n          return sortType === 'asc' ? -1 : 1;\n        }\n      }\n        return 0;\n    });\n    this.setState(prevState => {\n      const sortType = prevState.sortType === 'asc' ? 'desc' : 'asc';\n      return {\n        ...prevState,\n        sortType\n      }\n    })\n    setUsers(newList)\n  }\n\n  handleInput = (event) => {\n    const { name, value } = event.target;\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        newUser: {\n          ...prevState.newUser,\n          [name]: value\n        }\n      };\n    });\n  }\n\n  onCancelEdit = () => {\n    this.setState({\n      editMode: false,\n      newUser: {\n        firstName: '',\n        lastName: '',\n        score: ''\n      }\n    })\n  }\n\n  renderUserAddForm = () => {\n    const { newUser : { firstName, lastName, score } } = this.state;\n    return (\n      <form className=\"add-form\">\n        <input placeholder=\"First Name\" type=\"text\" name=\"firstName\" value={firstName} onChange={this.handleInput}></input>\n        <input placeholder=\"Last Name\" type=\"text\" name=\"lastName\" value={lastName} onChange={this.handleInput}></input>\n        <input placeholder=\"Score\" type=\"number\" name=\"score\" value={score} onChange={this.handleInput}></input>\n        <div className=\"add-form__btns\">\n          <button onClick={this.addUser} type=\"submit\">Submit</button>\n          <button onClick={this.onCancelEdit} type=\"button\">Cancel</button>\n        </div>\n      </form>\n    );\n  }\n\n  render() {\n    const { users } = this.props;\n    const { editMode } = this.state;\n    return (\n      <div className=\"list\">\n        <div className=\"container\">\n          {users.length ?\n            <table className=\"list__items\">\n              <thead>\n                <tr>\n                  <th className=\"list__sort-btn\" onClick={() => this.sortBy(users, 'lastName')}>Name</th>\n                  <th className=\"list__sort-btn\" onClick={() => this.sortBy(users, 'score')}>Score</th> \n                  <th></th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  users.map(user => <ListItem key={user.id} {...user}/>)\n                }\n              </tbody>\n            </table>\n          :\n            <p className=\"list__empty\">Empty list</p>\n          }\n          {editMode && this.renderUserAddForm()}\n          <button\n            className=\"list__new-user\"\n            onClick={() => this.setState({editMode: !editMode})}\n            >\n              Add user\n            </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = {\n  addUser,\n  setUsers\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(List);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.scss';\nimport List from './components/List/List';\nimport { getUsers } from './store/actions/list';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getUsers();\n  }\n\n  render() {\n    const {\n      users\n    } = this.props;\n\n    return (\n      <div className=\"page\">\n        <List users={users} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: [...state.list.users]\n});\n\nconst mapDispatchToProps = {\n  getUsers\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(App);\n","export const users = [\n  {\n    id: 0,\n    createdAt: '2019-01-30T10:47:47.813461Z',\n    firstName: 'Alice',\n    lastName: 'Geary',\n    score: '12'\n  }, {\n    id: 1,\n    createdAt: '2019-01-30T10:48:47.813461Z',\n    firstName: 'John',\n    lastName: 'Junge',\n    score: '22'\n  }, {\n    id: 2,\n    createdAt: '2019-01-12T10:47:47.813461Z',\n    firstName: 'Rob',\n    lastName: 'Vera',\n    score: '14'\n  }, {\n    id: 3,\n    createdAt: '2019-01-19T10:47:47.813461Z',\n    firstName: 'James',\n    lastName: 'Smith',\n    score: '15'\n  }, {\n    id: 4,\n    createdAt: '2019-01-11T10:47:47.813461Z',\n    firstName: 'Liam',\n    lastName: 'Williams',\n    score: '17'\n  }, {\n    id: 5,\n    createdAt: '2019-01-11T10:47:47.813461Z',\n    firstName: 'Olivia',\n    lastName: 'Davis',\n    score: '17'\n  }\n];\n","import {\n  GET_USERS,\n  SET_USERS,\n  ADD_USER,\n  EDIT_USER,\n  DELETE_USER,\n} from '../actionTypes';\n\nimport { users as DATA } from '../../data';\n\nconst initialState = {\n  users: []\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_USERS:\n      return {\n        ...state,\n        users: DATA\n      }\n    case SET_USERS:\n      return {\n        ...state,\n        users: payload\n      }\n    case ADD_USER:\n      return {\n        ...state,\n        users: [\n          ...state.users,\n          {\n            ...payload,\n            id: state.users.length,\n            createdAt: new Date().toISOString()\n          }\n        ]\n      };\n\n    case EDIT_USER:\n      const newData = state.users.map((el) => {\n        if(el.id === payload.id) {\n          return {\n            ...el,\n            ...payload\n          };\n        }\n        return el;\n      })\n      return {\n        ...state,\n        users: newData\n      };\n\n    case DELETE_USER:\n      const newList = state.users.filter((el) => el.id !== payload);\n      return {\n        ...state,\n        users: newList\n      };\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\n// Reducers\nimport list from './list';\n\nexport default combineReducers({\n  list\n})","import { applyMiddleware, createStore } from 'redux';\nimport allReducers from './reducers';\n\nconst middlewares = [];\n\nexport default createStore(allReducers, applyMiddleware(...middlewares));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport App from './App';\nimport store from './store/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}